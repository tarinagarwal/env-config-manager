paths:
  /api/v1/projects:
    get:
      tags:
        - Projects
      summary: List all projects
      description: Get all projects the user has access to
      security:
        - bearerAuth: []
        - apiKeyAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Page number
        - in: query
          name: limit
          schema:
            type: integer
            default: 20
            maximum: 100
          description: Items per page
      responses:
        "200":
          description: List of projects
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Project"
                  pagination:
                    type: object
                    properties:
                      page:
                        type: integer
                      limit:
                        type: integer
                      total:
                        type: integer
                      totalPages:
                        type: integer

    post:
      tags:
        - Projects
      summary: Create a new project
      description: Create a new project (subject to plan limits)
      security:
        - bearerAuth: []
        - apiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  example: My Project
                description:
                  type: string
                  example: Project for production environment
      responses:
        "201":
          description: Project created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
        "403":
          description: Plan limit exceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error:
                  code: FORBIDDEN_PLAN_LIMIT
                  message: Project limit reached for your plan
                  details:
                    current: 1
                    limit: 1
                    plan: free

  /api/v1/projects/{projectId}:
    get:
      tags:
        - Projects
      summary: Get project details
      description: Get a specific project by ID
      security:
        - bearerAuth: []
        - apiKeyAuth: []
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
          description: Project ID
      responses:
        "200":
          description: Project details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
        "404":
          description: Project not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    patch:
      tags:
        - Projects
      summary: Update project
      description: Update project name or description (requires admin role)
      security:
        - bearerAuth: []
        - apiKeyAuth: []
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Updated Project Name
                description:
                  type: string
                  example: Updated description
      responses:
        "200":
          description: Project updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
        "403":
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      tags:
        - Projects
      summary: Delete project
      description: Permanently delete a project and all its data (requires owner role)
      security:
        - bearerAuth: []
        - apiKeyAuth: []
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Project deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Project deleted successfully
        "403":
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/v1/projects/{projectId}/role:
    get:
      tags:
        - Projects
      summary: Get user's role in project
      description: Get the current user's role in the specified project
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: User's role
          content:
            application/json:
              schema:
                type: object
                properties:
                  role:
                    type: string
                    enum: [viewer, developer, admin, owner]
                    example: developer

  /api/v1/projects/{projectId}/members:
    get:
      tags:
        - Projects
      summary: List project members
      description: Get all members of a project with their roles
      security:
        - bearerAuth: []
        - apiKeyAuth: []
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: List of project members
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    userId:
                      type: string
                    email:
                      type: string
                    role:
                      type: string
                      enum: [viewer, developer, admin, owner]
                    createdAt:
                      type: string
                      format: date-time

    post:
      tags:
        - Projects
      summary: Add project member
      description: Add a new member to the project (requires admin role)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - role
              properties:
                email:
                  type: string
                  format: email
                  example: newmember@example.com
                role:
                  type: string
                  enum: [viewer, developer, admin]
                  example: developer
      responses:
        "201":
          description: Member added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Member added successfully
        "403":
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/v1/projects/{projectId}/members/{userId}:
    patch:
      tags:
        - Projects
      summary: Update member role
      description: Change a member's role in the project (requires admin role)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - role
              properties:
                role:
                  type: string
                  enum: [viewer, developer, admin]
                  example: admin
      responses:
        "200":
          description: Role updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Role updated successfully

    delete:
      tags:
        - Projects
      summary: Remove project member
      description: Remove a member from the project (requires admin role)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Member removed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Member removed successfully
